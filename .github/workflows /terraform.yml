name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

jobs:
  terraform-check:
    name: "terraform-check"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Verify formatting
        run: terraform fmt -check

  terraform-plan:
    name: "terraform-plan"
    needs: terraform-check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::788734491467:role/GithubActionsRole
          aws-region: eu-north-1

      - name: terraform init
        run: terraform init -input=false

      - name: terraform plan
        id: plan
        run: terraform plan -input=false

  terraform-apply:
    name: "terraform-apply"
    needs: terraform-plan
    if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::788734491467:role/GithubActionsRole
          aws-region: eu-north-1

      - name: terraform init
        run: terraform init -input=false

      - name: terraform apply
        run: terraform apply -auto-approve -input=false